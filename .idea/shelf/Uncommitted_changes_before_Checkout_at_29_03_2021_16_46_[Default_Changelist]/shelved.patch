Index: app/src/main/java/com/example/kodama/controllers/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kodama.controllers;\r\n\r\nimport android.Manifest;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Environment;\r\nimport android.os.StrictMode;\r\nimport android.provider.MediaStore;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport android.os.Bundle;\r\nimport com.example.kodama.R;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n    /*\r\n    public static int index =0;\r\n    public final String directory = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) + \"/\";\r\n    //in tutorial aici intra in files la android sdk in telefon la pictures si o facut un folder nou \"myCamera\" si la randul de mai sus in ghilimele pun \"/myCamera/\"\r\n   */\r\n\r\n    static final int REQUEST_IMAGE_CAPTURE = 1;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.home);\r\n\r\n        ImageButton historyButton = (ImageButton) findViewById(R.id.historyButton);\r\n        ImageButton helpButton = (ImageButton) findViewById(R.id.helpButton);\r\n        ImageButton aboutUsButton = (ImageButton) findViewById(R.id.aboutUsButton);\r\n        ImageButton homeButton = (ImageButton) findViewById(R.id.homeButton);\r\n        ImageButton cameraButton = (ImageButton) findViewById(R.id.buttonCamera);\r\n\r\n        homeButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(HomeActivity.this, HomeActivity.class));\r\n            }\r\n        });\r\n\r\n        historyButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(HomeActivity.this, HistoryActivity.class));\r\n            }\r\n        });\r\n\r\n        helpButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(HomeActivity.this, HelpActivity.class));\r\n            }\r\n        });\r\n\r\n        aboutUsButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(HomeActivity.this, AboutUsActivity.class));\r\n            }\r\n        });\r\n\r\n        /*\r\n        ActivityCompat.requestPermissions(this, new String[] {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE}, PackageManager.PERMISSION_GRANTED);\r\n        StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();\r\n        StrictMode.setVmPolicy(builder.build());\r\n         */\r\n    }\r\n\r\n\r\n    /*\r\n    public void takePicture(View view) {\r\n        index++;\r\n        String file = directory + index + \".jpg\";\r\n        File newFile = new File(file);\r\n        try {\r\n            newFile.createNewFile();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Uri outputFileUri = Uri.fromFile(newFile);\r\n        Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n\r\n        cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT,outputFileUri);\r\n        startActivity(cameraIntent);\r\n    }\r\n\r\n     */\r\n\r\n    public void dispatchTakePictureIntent() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        try {\r\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n        } catch (ActivityNotFoundException e) {\r\n            //display error state to the user\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kodama/controllers/HomeActivity.java	(revision df1a1264ea68e0b7407da4b0e40e78c794425767)
+++ app/src/main/java/com/example/kodama/controllers/HomeActivity.java	(date 1616878303004)
@@ -103,6 +103,5 @@
         } catch (ActivityNotFoundException e) {
             //display error state to the user
         }
-
     }
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#JAVA_INTERNAL\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision df1a1264ea68e0b7407da4b0e40e78c794425767)
+++ .idea/gradle.xml	(date 1617004745487)
@@ -7,7 +7,7 @@
         <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="#JAVA_INTERNAL" />
+        <option name="gradleJvm" value="13" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
